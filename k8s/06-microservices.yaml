apiVersion: apps/v1
kind: Deployment
metadata:
  name: tenant-manager-deployment
  namespace: tenant-app
spec:
  replicas: 1
  selector: { matchLabels: { app: tenant-manager } }
  template:
    metadata: { labels: { app: tenant-manager } }
    spec:
      containers:
        - name: tenant-manager
          image: belepod/tenant-manager:v1.0
          imagePullPolicy: Always
          ports: [{ containerPort: 3000 }]
          env:
            - { name: POSTGRES_HOST, value: "tenant-db-service.tenant-app.svc.cluster.local" }
            - { name: POSTGRES_DB, value: "tenant_db" }
          envFrom:
            - configMapRef: { name: tenant-app-config }
            - secretRef: { name: tenant-app-secrets }
---
apiVersion: v1
kind: Service
metadata:
  name: tenant-manager-service
  namespace: tenant-app
spec:
  selector: { app: tenant-manager }
  ports: [{ port: 3000 }]

---
apiVersion: apps/v1
kind: Deployment
metadata: { name: auth-service-deployment, namespace: tenant-app }
spec:
  replicas: 1
  selector: { matchLabels: { app: auth-service } }
  template:
    metadata: { labels: { app: auth-service } }
    spec:
      containers:
        - name: auth-service
          image: belepod/auth-service:v1.0
          imagePullPolicy: Always
          ports: [{ containerPort: 3000 }]
          env:
            - { name: POSTGRES_HOST, value: "auth-db-service.tenant-app.svc.cluster.local" }
            - { name: POSTGRES_DB, value: "auth_db" }
          envFrom:
            - configMapRef: { name: tenant-app-config }
            - secretRef: { name: tenant-app-secrets }
---
apiVersion: v1
kind: Service
metadata: { name: auth-service-service, namespace: tenant-app }
spec:
  selector: { app: auth-service }
  ports: [{ port: 3000 }]

---
apiVersion: apps/v1
kind: Deployment
metadata: { name: survey-service-deployment, namespace: tenant-app }
spec:
  replicas: 1
  selector: { matchLabels: { app: survey-service } }
  template:
    metadata: { labels: { app: survey-service } }
    spec:
      containers:
        - name: survey-service
          image: belepod/survey-service:v1.0
          imagePullPolicy: Always
          ports: [{ containerPort: 3000 }]
          env:
            - { name: POSTGRES_HOST, value: "survey-db-service.tenant-app.svc.cluster.local" }
            - { name: POSTGRES_DB, value: "survey_db" }
          envFrom:
            - configMapRef: { name: tenant-app-config }
            - secretRef: { name: tenant-app-secrets }
---
apiVersion: v1
kind: Service
metadata: { name: survey-service-service, namespace: tenant-app }
spec:
  selector: { app: survey-service }
  ports: [{ port: 3000 }]

